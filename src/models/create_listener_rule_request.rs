/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * The version of the OpenAPI document: 1.16
 * Contact: support@outscale.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateListenerRuleRequest {
    /// If true, checks whether you have the required permissions to perform the action.
    #[serde(rename = "DryRun", skip_serializing_if = "Option::is_none")]
    pub dry_run: Option<bool>,
    #[serde(rename = "Listener")]
    pub listener: Box<crate::models::LoadBalancerLight>,
    #[serde(rename = "ListenerRule")]
    pub listener_rule: Box<crate::models::ListenerRuleForCreation>,
    /// The IDs of the backend VMs.
    #[serde(rename = "VmIds")]
    pub vm_ids: Vec<String>,
}

impl CreateListenerRuleRequest {
    pub fn new(
        listener: crate::models::LoadBalancerLight,
        listener_rule: crate::models::ListenerRuleForCreation,
        vm_ids: Vec<String>,
    ) -> CreateListenerRuleRequest {
        CreateListenerRuleRequest {
            dry_run: None,
            listener: Box::new(listener),
            listener_rule: Box::new(listener_rule),
            vm_ids,
        }
    }
}
