/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /> The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br /> Throttling: To protect against overloads, the number of identical requests allowed in a given time period is limited.<br /> Brute force: To protect against brute force attacks, the number of failed authentication attempts in a given time period is limited.<br /><br /> Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but there are [differences in resource names](https://docs.outscale.com/en/userguide/About-the-APIs.html) between AWS and the OUTSCALE API.<br /> You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.<br /><br /> An OpenAPI description of the OUTSCALE API is also available in this [GitHub repository](https://github.com/outscale/osc-api).<br /> # Authentication Schemes ### Access Key/Secret Key The main way to authenticate your requests to the OUTSCALE API is to use an access key and a secret key.<br /> The mechanism behind this is based on AWS Signature Version 4, whose technical implementation details are described in [Signature of API Requests](https://docs.outscale.com/en/userguide/Signature-of-API-Requests.html).<br /><br /> In practice, the way to specify your access key and secret key depends on the tool or SDK you want to use to interact with the API.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify your access key, secret key, and the Region of your account. > 2. You then specify the `--profile` option when executing OSC CLI commands. > > For more information, see [Installing and Configuring OSC CLI](https://docs.outscale.com/en/userguide/Installing-and-Configuring-OSC-CLI.html).  See the code samples in each section of this documentation for specific examples in different programming languages.<br /> For more information about access keys, see [About Access Keys](https://docs.outscale.com/en/userguide/About-Access-Keys.html).  > If you try to sign requests with an invalid access key four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### Login/Password For certain API actions, you can also use basic authentication with the login (email address) and password of your TINA account.<br /> This is useful only in special circumstances, for example if you do not know your access key/secret key and want to retrieve them programmatically.<br /> In most cases, however, you can use the Cockpit web interface to retrieve them.<br />  > For example, if you use OSC CLI: > 1. You need to create an **~/.osc/config.json** file to specify the Region of your account, but you leave the access key value and secret key value empty (`&quot;&quot;`). > 2. You then specify the `--profile`, `--authentication-method`, `--login`, and `--password` options when executing OSC CLI commands.  See the code samples in each section of this documentation for specific examples in different programming languages.  > If you try to sign requests with an invalid password four times in a row, further authentication attempts will be prevented for 1 minute. This lockout time increases 1 minute every four failed attempts, for up to 10 minutes.  ### No Authentication A few API actions do not require any authentication. They are indicated as such in this documentation.<br /> ### Other Security Mechanisms In parallel with the authentication schemes, you can add other security mechanisms to your OUTSCALE account, for example to restrict API requests by IP or other criteria.<br /> For more information, see [Managing Your API Accesses](https://docs.outscale.com/en/userguide/Managing-Your-API-Accesses.html). # Pagination Tutorial You can learn more about the pagination methods for read calls in the dedicated [pagination tutorial](https://docs.outscale.com/en/userguide/Tutorial-Paginating-an-API-Request.html). # Error Codes Reference You can learn more about errors returned by the API in the dedicated [errors page](api-errors.html).
 *
 * The version of the OpenAPI document: 1.34.3
 * Contact: support@outscale.com
 * Generated by: https://openapi-generator.tech
 */

/// With : The information to display in each returned log.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct With {
    /// By default or if set to true, the account ID is displayed.
    #[serde(rename = "AccountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<bool>,
    /// By default or if set to true, the duration of the call is displayed.
    #[serde(rename = "CallDuration", skip_serializing_if = "Option::is_none")]
    pub call_duration: Option<bool>,
    /// By default or if set to true, the access key is displayed.
    #[serde(rename = "QueryAccessKey", skip_serializing_if = "Option::is_none")]
    pub query_access_key: Option<bool>,
    /// By default or if set to true, the name of the API is displayed.
    #[serde(rename = "QueryApiName", skip_serializing_if = "Option::is_none")]
    pub query_api_name: Option<bool>,
    /// By default or if set to true, the version of the API is displayed.
    #[serde(rename = "QueryApiVersion", skip_serializing_if = "Option::is_none")]
    pub query_api_version: Option<bool>,
    /// By default or if set to true, the name of the call is displayed.
    #[serde(rename = "QueryCallName", skip_serializing_if = "Option::is_none")]
    pub query_call_name: Option<bool>,
    /// By default or if set to true, the date of the call is displayed.
    #[serde(rename = "QueryDate", skip_serializing_if = "Option::is_none")]
    pub query_date: Option<bool>,
    /// By default or if set to true, the raw header of the HTTP request is displayed.
    #[serde(rename = "QueryHeaderRaw", skip_serializing_if = "Option::is_none")]
    pub query_header_raw: Option<bool>,
    /// By default or if set to true, the size of the raw header of the HTTP request is displayed.
    #[serde(rename = "QueryHeaderSize", skip_serializing_if = "Option::is_none")]
    pub query_header_size: Option<bool>,
    /// By default or if set to true, the IP is displayed.
    #[serde(rename = "QueryIpAddress", skip_serializing_if = "Option::is_none")]
    pub query_ip_address: Option<bool>,
    /// By default or if set to true, the raw payload of the HTTP request is displayed.
    #[serde(rename = "QueryPayloadRaw", skip_serializing_if = "Option::is_none")]
    pub query_payload_raw: Option<bool>,
    /// By default or if set to true, the size of the raw payload of the HTTP request is displayed.
    #[serde(rename = "QueryPayloadSize", skip_serializing_if = "Option::is_none")]
    pub query_payload_size: Option<bool>,
    /// By default or if set to true, the user agent of the HTTP request is displayed.
    #[serde(rename = "QueryUserAgent", skip_serializing_if = "Option::is_none")]
    pub query_user_agent: Option<bool>,
    /// By default or if set to true, the request ID is displayed.
    #[serde(rename = "RequestId", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<bool>,
    /// By default or if set to true, the size of the response is displayed.
    #[serde(rename = "ResponseSize", skip_serializing_if = "Option::is_none")]
    pub response_size: Option<bool>,
    /// By default or if set to true, the HTTP status code of the response is displayed.
    #[serde(rename = "ResponseStatusCode", skip_serializing_if = "Option::is_none")]
    pub response_status_code: Option<bool>,
}

impl With {
    /// The information to display in each returned log.
    pub fn new() -> With {
        With {
            account_id: None,
            call_duration: None,
            query_access_key: None,
            query_api_name: None,
            query_api_version: None,
            query_call_name: None,
            query_date: None,
            query_header_raw: None,
            query_header_size: None,
            query_ip_address: None,
            query_payload_raw: None,
            query_payload_size: None,
            query_user_agent: None,
            request_id: None,
            response_size: None,
            response_status_code: None,
        }
    }
}
